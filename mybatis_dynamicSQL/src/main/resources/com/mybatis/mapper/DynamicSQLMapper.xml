<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mybatis.mapper.DynamicSQLMapper">

    <!--
        动态SQL：
        1、if:通过test属性中的表达式判断标签中的内容是否有效(是否会拼接到SQL中)
        2、where
            <1>若where标签中有条件成立，会自动生成where关键字
            <2>会自动将where标签中内容前多余的and去掉，但是其中内容后多余的and无法去掉
            <3>若where标签中没有条件成立，则where标签没有任何功能
        3、trim
            <1>prefix:在标签中内容前面添加指定内容
            <2>prefixOverride:在标签中内容前面去掉指定内容
            <3>suffix:在标签中内容后面添加指定内容
            <4>suffixOverride:在标签中内容后面去掉指定内容
        4、choose,when,otherwise:
            when: 相当于java中的if... else if...
            otherwise: 相当于java中的else...

            when至少设置一个，otherwise最多设置一个
        5、foreach:
            collection:设置要循环的数组或集合
            item:用一个字符来表示数组或集合中的一个数据
            separator:设置每次循环的数据之间的分隔符
            open:循环的所有内容以什么开始
            close:循环的所有内容以什么结束
        6、sql片段
            可以记录一段sql，在需要用的地方使用include标签进行引用
            <sql id="empColumns">
                emp_id, emp_name, gender, age, dept_id
            </sql>
            <include refid="empColumns"></include>
    -->

    <sql id="empColumns">
        emp_id, emp_name, gender, age, dept_id
    </sql>

    <!--void insertMoreEmp(@Params("emps") List<Emp> emps);-->
    <insert id="insertMoreEmp">
        insert into t_emp values
        <foreach collection="emps" item="emp" separator=",">
            (null, #{emp.empName}, #{emp.gender}, #{emp.age}, null)
        </foreach>
    </insert>

    <!--void deleteMoreEmp(@Param("empIds") Integer[] empIds);-->
    <delete id="deleteMoreEmp">
        delete from t_emp where
        <foreach collection="empIds" item="empId" separator="OR">
            emp_id = #{empId}
        </foreach>
    </delete>

    <delete id="deleteMoreEmpOne">
        delete from t_emp where emp_id in
        (
        <foreach collection="empIds" item="empId" separator=",">
            #{empId}
        </foreach>
        )
    </delete>

    <!--List<Emp> getEmpByChoose(Emp emp)-->
    <select id="getEmpByChoose" resultType="Emp">
        select <include refid="empColumns"></include> from t_emp
        <where>
            <choose>
                <when test="empName != null and empName != ''">
                    emp_name = #{empName}
                </when>
                <when test="age != null and age != ''">
                    age = #{age}
                </when>
                <when test="gender != null and gender != ''">
                    gender = #{gender}
                </when>
            </choose>
        </where>
    </select>

    <!--List<Emp> getEmpByCondition(Emp emp);-->
    <select id="getEmpByCondition" resultType="Emp">
        select * from t_emp
        <trim prefix="where" suffixOverrides="and">
            <if test="empName != null and empName != ''">
                emp_name = #{empName} and
            </if>
            <if test="age != null and age != ''">
                age = #{age} and
            </if>
            <if test="gender != null and gender != ''">
                and gender = #{gender}
            </if>
        </trim>
    </select>

    <select id="getEmpByConditionTwo" resultType="Emp">
        select * from t_emp
        <where>
            <if test="empName != null and empName != ''">
                emp_name = #{empName}
            </if>
            <if test="age != null and age != ''">
                and age = #{age}
            </if>
            <if test="gender != null and gender != ''">
                and gender = #{gender}
            </if>
        </where>
    </select>

    <select id="getEmpByConditionOne" resultType="Emp">
        select * from t_emp where 1=1
        <if test="empName != null and empName != ''">
            and emp_name = #{empName}
        </if>
        <if test="age != null and age != ''">
            and age = #{age}
        </if>
        <if test="gender != null and gender != ''">
            and gender = #{gender}
        </if>
    </select>
</mapper>